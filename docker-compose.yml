version: '3.8'

services:
  producer:
    build: .
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
    command: npm run dev:producer
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
  worker:
    build: .
    environment:
      NODE_ENV: development
    command: sh -c "npx db-migrate up && npm run dev:worker"
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # RabbitMQ default port for messaging
      - '15672:15672' # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U mydatabase']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
